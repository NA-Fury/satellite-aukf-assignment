# ------------------------------------------------------------
# Build & Packaging (PEP 621 via setuptools)
# ------------------------------------------------------------
[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name            = "satellite-aukf"
version         = "1.0.0"
description     = "Production-ready Adaptive UKF achieving 23.10m satellite tracking accuracy"
readme          = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.8"
authors         = [{name = "Naziha Aslam", email = "naziha2305@gmail.com"}]
license         = {text = "MIT"}
keywords        = ["kalman-filter", "satellite-tracking", "adaptive-filtering", "gnss", "orbit-determination"]
classifiers     = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Astronomy",
]

dependencies = [
    # Core science stack
    "numpy>=1.21,<2.0",
    "scipy>=1.7,<2.0",
    "pandas>=1.3,<3.0",
    "matplotlib>=3.4,<4.0",
    "seaborn>=0.11,<1.0",
    # Data handling
    "pyarrow>=5.0",
    "tables>=3.6",
    # Statistical analysis
    "statsmodels>=0.12,<1.0",
    # Configuration
    "python-dotenv>=0.19",
]

[project.optional-dependencies]
# Full development environment
dev = [
    # Testing & coverage
    "pytest>=7.0,<9.0",
    "pytest-cov>=4.0,<6.0",
    "pytest-mock>=3.0",
    # Code quality
    "black==25.1.0",
    "isort==6.0.1",
    "flake8==7.3.0",
    "flake8-bugbear>=24.0",
    "mypy>=1.0,<2.0",
    # Git hooks
    "pre-commit>=4.2,<5.0",
    "nbstripout>=0.6",
    "nbqa>=1.5",
    # Documentation
    "sphinx>=4.0,<8.0",
    "sphinx-rtd-theme>=1.0",
    # Performance profiling
    "line-profiler>=4.0",
    "memory-profiler>=0.60",
]

# Jupyter environment
jupyter = [
    "jupyter>=1.0,<2.0",
    "jupyterlab>=3.0,<5.0",
    "ipykernel>=6.0,<7.0",
    "notebook>=6.4,<8.0",
    "ipywidgets>=7.0,<9.0",
]

# Performance optimizations
performance = [
    "numba>=0.54,<1.0",
    "cython>=0.29,<4.0",
]

# Orbital mechanics (install via conda)
orekit = [
    # Note: orekit not available on PyPI, install via conda:
    # conda install -c conda-forge orekit=12.1.2 jpype1=1.5 openjdk=8
]

[project.urls]
Homepage = "https://github.com/NA-Fury/satellite-aukf-assignment"
Documentation = "https://github.com/NA-Fury/satellite-aukf-assignment/blob/main/docs/Final_Technical_Report.md"
Repository = "https://github.com/NA-Fury/satellite-aukf-assignment.git"
Issues = "https://github.com/NA-Fury/satellite-aukf-assignment/issues"

# Entry points for command-line usage
[project.scripts]
satellite-aukf = "satellite_aukf.cli:main"

# Package discovery
[tool.setuptools.packages.find]
where = ["src"]
include = ["satellite_aukf*"]

[tool.setuptools.package-data]
satellite_aukf = ["*.yaml", "*.json", "*.toml"]

# ------------------------------------------------------------
# Development tooling configuration
# ------------------------------------------------------------

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | orekit-data
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["satellite_aukf"]
known_third_party = ["numpy", "pandas", "scipy", "matplotlib", "orekit"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
    "E501",  # line too long (handled by black)
    "E402",  # module level import not at top of file
    "F401",  # imported but unused
    "F841",  # local variable assigned but never used
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "orekit-data",
    ".venv",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "orekit.*",
    "org.orekit.*",
    "org.hipparchus.*",
    "java.*",
    "matplotlib.*",
    "seaborn.*",
    "statsmodels.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=satellite_aukf",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::RuntimeWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/satellite_aukf"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.jupytext]
formats = "ipynb,py:percent"

# Performance profiling
[tool.line_profiler]

[tool.memory_profiler]
